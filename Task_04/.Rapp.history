boring_function
submit()
my_mean <- function(my_vector) {sum(my_vector) / length(my_vector)}
submit()
my_mean(c(4, 5, 10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor =11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(c(1.4, 3.6, 7.9, 8.8))
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x1},c(8, 4, 0))
evaluate(function(x){x[1]},c(8, 4, 0))
evaluate(function(x){x[-1]},c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
telegram <- function(...){paste("START",..., "STOP", sep= "")  }
submit()
telegram(c("Hello", "how", "are", "you")
telegram(c("START", "Hello", "how", "are", "you", "STOP")
telegram ("START", "hello", "how", "are", "you", "STOP")
submit()
mad_libs(place= "Bahamas", adjective= "sunny", noun= "ocean")
submit()
"I" %p% "love" %p% "R!"
library("swirl")
swirl()
data(cars)
?cars
head(cars)
plot(cars)
?plots
??plots
help(plot)
plot(cars)
plot(x= cars$speed, y = car$dist)
plot(x= cars$speed, y = cars$dist)
plot(x= cars$dist, y = cars$speed)
plot(x= cars$speed, y = cars$dist)
plot(x= cars$speed, y = cars$dist, xlab= "Speed")
plot(x= cars$speed, y = cars$dist, ylab= "Stopping Distance")
plot(x= cars$speed, y = cars$dist, xlab= "Speed", ylab= "Stopping Distance")
plot(cars, main= "My Plot")
plot(cars, sub= "My Plot")
plot(cars, sub= "My Plot Subtitle")
plot(cars, col=2)
plot(cars, xlim = c(10, 15))
plot(cars, pch= 2)
data(mtcars)
?boxplot
boxplot(formula= mpg ~ cyl, data= mtcars)
hist(mtcars$mpg)
library("swirl")
swirl()
read.csv()
read.csv(beren3)
read.csv("beren3")
> Feeds <--which (Data$event == 'bottle')
setwd('~/Desktop/Evolution/tasks/Task_02')
setwd('~/Desktop/Evolution/tasks/Task_02')#
Data <- read.csv ('http://jonsmitchell.com/data/beren.csv', stringsAsFactors=F)#
write.csv(Data, 'rawdata.csv', quote=F)#
length(Data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(data)#
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:3, 4]#
Data[1:5, 1:3]#
Feeds <- which(Data[,9] == 'bottle')#
berenMilk <- Data[Feeds ,]#
head(berenMilk)#
Feeds <- which(Data[,'event'] == 'bottle')#
head(Feeds)#
Feeds <- which(Data$event == 'bottle')#
head(Feeds)#
dayID <- apply(Data, 1, function(x) paste(x[1:3],collapse='-'))#
head(dayID)#
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")#
head(dateID)#
Data$age <- dateID - dateID [which(Data$event == 'birth')]#
head(data)#
beren2<-Data#
beren3<- beren2[order(beren2$age) ,]#
write.csv(beren3, 'beren_new.csv', quote=F, row.names=FALSE)#
Feeds <- which(beren3$event == "bottle")#
avgMilk <- mean(beren3$value[Feeds])#
avgFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], mean)#
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)#
totalFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], sum)#
numFeeds <- tapply(beren3$value[Feeds] ,  beren3$age[Feeds], length)#
head(numFeeds)#
cor(beren3$value[Feeds], beren3$age[Feeds])#
cor.test(beren3$value[Feeds], beren3$age[Feeds])#
berenCor <- cor.test(beren3$value[Feeds], beren3$age[Feeds])#
head(berenCor)#
berenANOVA <- aov(beren3$value[Feeds] ~ beren3$caregiver[Feeds])#
head(berenANOVA)#
boxplot( beren3$value[Feeds] ~ beren3$caregiver[Feeds], xlab= "who gave the bottle" , ylab = "amount of milk consumed (oz)" )#
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')
pdf(''r02-totalMilkByDay.pdf'', height = 4, width = 4)
pdf("r02-totalMilkByDay.pdf", height = 4, width = 4)
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab=" ounces of milk")
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")
abline(h=mean(totalFeed), lty=2, col='red')
dev.off()
source("http://jonsmitchell.com/code/plot/Fxn02b.R")
source("http://jonsmitchell.com/code/plotFxn02b.R")
unique(beren3$event)
Questions1: The first two hypotheses would be inappropriate because there is not enough data to support them. #
Question 2: This graph is difficult to read because of the large x-axis scale which makes the data scrunched together which makes it hard to determine the exact values for each point.
hypothesis for task C: The amount of time that Beren sleeps for nap time has decreased as age increased
beren4 <-beren3[Naps]
setwd('~/Desktop/Evolution/tasks/Task_02')#
Data <- read.csv ('http://jonsmitchell.com/data/beren.csv', stringsAsFactors=F)#
write.csv(Data, 'rawdata.csv', quote=F)#
length(Data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(data)#
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:3, 4]#
Data[1:5, 1:3]#
Feeds <- which(Data[,9] == 'bottle')#
berenMilk <- Data[Feeds ,]#
head(berenMilk)#
Feeds <- which(Data[,'event'] == 'bottle')#
head(Feeds)#
Feeds <- which(Data$event == 'bottle')#
head(Feeds)#
dayID <- apply(Data, 1, function(x) paste(x[1:3],collapse='-'))#
head(dayID)#
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")#
head(dateID)#
Data$age <- dateID - dateID [which(Data$event == 'birth')]#
head(data)#
beren2<-Data#
beren3<- beren2[order(beren2$age) ,]#
write.csv(beren3, 'beren_new.csv', quote=F, row.names=FALSE)#
Feeds <- which(beren3$event == "bottle")#
avgMilk <- mean(beren3$value[Feeds])#
avgFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], mean)#
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)#
totalFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], sum)#
numFeeds <- tapply(beren3$value[Feeds] ,  beren3$age[Feeds], length)#
head(numFeeds)#
cor(beren3$value[Feeds], beren3$age[Feeds])#
cor.test(beren3$value[Feeds], beren3$age[Feeds])#
berenCor <- cor.test(beren3$value[Feeds], beren3$age[Feeds])#
head(berenCor)#
berenANOVA <- aov(beren3$value[Feeds] ~ beren3$caregiver[Feeds])#
head(berenANOVA)#
boxplot( beren3$value[Feeds] ~ beren3$caregiver[Feeds], xlab= "who gave the bottle" , ylab = "amount of milk consumed (oz)" )#
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')#
pdf("r02-totalMilkByDay.pdf", height = 4, width = 4)#
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab=" ounces of milk")#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')#
dev.off()#
Questions1: The first two hypotheses would be inappropriate because there is not enough data to support them. #
Question 2: This graph is difficult to read because of the large x-axis scale which makes the data scrunched together which makes it hard to determine the exact values for each point. #
source("http://jonsmitchell.com/code/plotFxn02b.R")#
unique(beren3$event)#
hypothesis for task C: The amount of time that Beren sleeps for nap time has decreased as age increased#
beren4 <-beren3[Naps]
beren4 <-beren3[Naps]
setwd('~/Desktop/Evolution/tasks/Task_02')#
Data <- read.csv ('http://jonsmitchell.com/data/beren.csv', stringsAsFactors=F)#
write.csv(Data, 'rawdata.csv', quote=F)#
length(Data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(data)#
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:3, 4]#
Data[1:5, 1:3]#
Feeds <- which(Data[,9] == 'bottle')#
berenMilk <- Data[Feeds ,]#
head(berenMilk)#
Feeds <- which(Data[,'event'] == 'bottle')#
head(Feeds)#
Feeds <- which(Data$event == 'bottle')#
head(Feeds)#
dayID <- apply(Data, 1, function(x) paste(x[1:3],collapse='-'))#
head(dayID)#
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")#
head(dateID)#
Data$age <- dateID - dateID [which(Data$event == 'birth')]#
head(data)#
beren2<-Data#
beren3<- beren2[order(beren2$age) ,]#
write.csv(beren3, 'beren_new.csv', quote=F, row.names=FALSE)#
Feeds <- which(beren3$event == "bottle")#
avgMilk <- mean(beren3$value[Feeds])#
avgFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], mean)#
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)#
totalFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], sum)#
numFeeds <- tapply(beren3$value[Feeds] ,  beren3$age[Feeds], length)#
head(numFeeds)#
cor(beren3$value[Feeds], beren3$age[Feeds])#
cor.test(beren3$value[Feeds], beren3$age[Feeds])#
berenCor <- cor.test(beren3$value[Feeds], beren3$age[Feeds])#
head(berenCor)#
berenANOVA <- aov(beren3$value[Feeds] ~ beren3$caregiver[Feeds])#
head(berenANOVA)#
boxplot( beren3$value[Feeds] ~ beren3$caregiver[Feeds], xlab= "who gave the bottle" , ylab = "amount of milk consumed (oz)" )#
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')#
pdf("r02-totalMilkByDay.pdf", height = 4, width = 4)#
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab=" ounces of milk")#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')#
dev.off() #
source("http://jonsmitchell.com/code/plotFxn02b.R")#
unique(beren3$event)
beren <- beren3[Naps]
beren <- beren3[Naps,]
startHour <- (beren4$start_hour)
startHour <-(beren4$start_hour)
beren4 <- beren3[Naps,]
startHour <-(beren4$start_hour)
startMin <- (beren4$start_minute)
stopHour <- (beren4$start_minute)
stopHour <-(beren4$end_hour)
stopMin <- (beren4$end_minute)
startHour
startMin
stopHour
beren4$sleepTime <-((stopHour - startHour)* 60) +(stopMin-startMin)
beren4
totalNap <- tapply(beren4$sleepTime, beren4$age, sum)
totalNap
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2,0.5,0), tck=-0.01)
plot(as.numeric(names(totalNap)), totalNap, type= "b",pch=16, xlab="age in days", ylab='Nap time in minutes')
cor.test(beren4$start_hour,beren4$sleepTime)
hypothesis: The amount of time that Beren naps decreased as solid food consumption increased
setwd('~/Desktop/Evolution/tasks/Task_02')#
Data <- read.csv ('http://jonsmitchell.com/data/beren.csv', stringsAsFactors=F)#
write.csv(Data, 'rawdata.csv', quote=F)#
length(Data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(data)#
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:3, 4]#
Data[1:5, 1:3]#
Feeds <- which(Data[,9] == 'bottle')#
berenMilk <- Data[Feeds ,]#
head(berenMilk)#
Feeds <- which(Data[,'event'] == 'bottle')#
head(Feeds)#
Feeds <- which(Data$event == 'bottle')#
head(Feeds)#
dayID <- apply(Data, 1, function(x) paste(x[1:3],collapse='-'))#
head(dayID)#
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")#
head(dateID)#
Data$age <- dateID - dateID [which(Data$event == 'birth')]#
head(data)#
beren2<-Data#
beren3<- beren2[order(beren2$age) ,]#
write.csv(beren3, 'beren_new.csv', quote=F, row.names=FALSE)#
Feeds <- which(beren3$event == "bottle")#
avgMilk <- mean(beren3$value[Feeds])#
avgFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], mean)#
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)#
totalFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], sum)#
numFeeds <- tapply(beren3$value[Feeds] ,  beren3$age[Feeds], length)#
head(numFeeds)#
cor(beren3$value[Feeds], beren3$age[Feeds])#
cor.test(beren3$value[Feeds], beren3$age[Feeds])#
berenCor <- cor.test(beren3$value[Feeds], beren3$age[Feeds])#
head(berenCor)#
berenANOVA <- aov(beren3$value[Feeds] ~ beren3$caregiver[Feeds])#
head(berenANOVA)#
boxplot( beren3$value[Feeds] ~ beren3$caregiver[Feeds], xlab= "who gave the bottle" , ylab = "amount of milk consumed (oz)" )#
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')#
pdf("r02-totalMilkByDay.pdf", height = 4, width = 4)#
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab=" ounces of milk")#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')#
dev.off() #
source("http://jonsmitchell.com/code/plotFxn02b.R")#
unique(beren3$event)#
beren4 <- beren3[Naps,]#
startHour <-(beren4$start_hour)#
startMin <- (beren4$start_minute)#
stopHour <- (beren4$start_minute)#
stopHour <-(beren4$end_hour)#
stopMin <- (beren4$end_minute)#
startHour#
startMin#
stopHour#
beren4$sleepTime <-((stopHour - startHour)* 60) +(stopMin-startMin)#
beren4#
totalNap <- tapply(beren4$sleepTime, beren4$age, sum)#
totalNap#
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2,0.5,0), tck=-0.01)#
plot(as.numeric(names(totalNap)), totalNap, type= "b",pch=16, xlab="age in days", ylab='Nap time in minutes')#
cor.test(beren4$start_hour,beren4$sleepTime)#
These show a negative correlation. #
hypothesis: The amount of time that Beren naps decreased as solid food consumption increased #
Questions1: The first two hypotheses would be inappropriate because there is not enough data to support them. #
Question 2: This graph is difficult to read because of the small x-axis scale which makes the data scrunched together which makes it hard to determine the exact values for each point.
setwd('~/Desktop/Evolution/tasks/Task_02')#
Data <- read.csv ('http://jonsmitchell.com/data/beren.csv', stringsAsFactors=F)#
write.csv(Data, 'rawdata.csv', quote=F)#
length(Data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(data)#
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:3, 4]#
Data[1:5, 1:3]
num(Feeds) <- tapply(beren3$value[Feeds], beren3$age[Feeds], length)
setwd('~/Desktop/Evolution/tasks/Task_02')#
Data <- read.csv ('http://jonsmitchell.com/data/beren.csv', stringsAsFactors=F)#
write.csv(Data, 'rawdata.csv', quote=F)#
length(Data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(data)#
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:3, 4]#
Data[1:5, 1:3]#
Feeds <- which(Data[,9] == 'bottle')#
berenMilk <- Data[Feeds ,]#
head(berenMilk)#
Feeds <- which(Data[,'event'] == 'bottle')#
head(Feeds)#
Feeds <- which(Data$event == 'bottle')#
head(Feeds)#
dayID <- apply(Data, 1, function(x) paste(x[1:3],collapse='-'))#
head(dayID)#
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")#
head(dateID)#
Data$age <- dateID - dateID [which(Data$event == 'birth')]#
head(data)#
beren2<-Data#
beren3<- beren2[order(beren2$age) ,]#
write.csv(beren3, 'beren_new.csv', quote=F, row.names=FALSE)#
Feeds <- which(beren3$event == "bottle")#
avgMilk <- mean(beren3$value[Feeds])#
avgFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], mean)#
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)#
totalFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], sum)#
numFeeds <- tapply(beren3$value[Feeds] ,  beren3$age[Feeds], length)#
head(numFeeds)#
cor(beren3$value[Feeds], beren3$age[Feeds])#
cor.test(beren3$value[Feeds], beren3$age[Feeds])#
berenCor <- cor.test(beren3$value[Feeds], beren3$age[Feeds])#
head(berenCor)#
berenANOVA <- aov(beren3$value[Feeds] ~ beren3$caregiver[Feeds])#
head(berenANOVA)#
boxplot( beren3$value[Feeds] ~ beren3$caregiver[Feeds], xlab= "who gave the bottle" , ylab = "amount of milk consumed (oz)" )#
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')#
pdf("r02-totalMilkByDay.pdf", height = 4, width = 4)#
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab=" ounces of milk")#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')#
dev.off() #
source("http://jonsmitchell.com/code/plotFxn02b.R")#
unique(beren3$event)#
beren4 <- beren3[Naps,]#
startHour <-(beren4$start_hour)#
startMin <- (beren4$start_minute)#
stopHour <- (beren4$start_minute)#
stopHour <-(beren4$end_hour)#
stopMin <- (beren4$end_minute)#
startHour#
startMin#
stopHour#
beren4$sleepTime <-((stopHour - startHour)* 60) +(stopMin-startMin)#
beren4#
totalNap <- tapply(beren4$sleepTime, beren4$age, sum)#
totalNap#
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2,0.5,0), tck=-0.01)#
plot(as.numeric(names(totalNap)), totalNap, type= "b",pch=16, xlab="age in days", ylab='Nap time in minutes')#
cor.test(beren4$start_hour,beren4$sleepTime)
setwd('~/Desktop/Evolution/tasks/Task_02')#
Data <- read.csv ('http://jonsmitchell.com/data/beren.csv', stringsAsFactors=F)#
write.csv(Data, 'rawdata.csv', quote=F)#
length(Data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(data)#
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:3, 4]#
Data[1:5, 1:3]#
Feeds <- which(Data[,9] == 'bottle')#
berenMilk <- Data[Feeds ,]#
head(berenMilk)#
Feeds <- which(Data[,'event'] == 'bottle')#
head(Feeds)#
Feeds <- which(Data$event == 'bottle')#
head(Feeds)#
dayID <- apply(Data, 1, function(x) paste(x[1:3],collapse='-'))#
head(dayID)#
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")#
head(dateID)#
Data$age <- dateID - dateID [which(Data$event == 'birth')]#
head(data)#
beren2<-Data#
beren3<- beren2[order(beren2$age) ,]#
write.csv(beren3, 'beren_new.csv', quote=F, row.names=FALSE)#
Feeds <- which(beren3$event == "bottle")#
avgMilk <- mean(beren3$value[Feeds])#
avgFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], mean)#
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)#
totalFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], sum)#
numFeeds <- tapply(beren3$value[Feeds] ,  beren3$age[Feeds], length)#
head(numFeeds)#
cor(beren3$value[Feeds], beren3$age[Feeds])#
cor.test(beren3$value[Feeds], beren3$age[Feeds])#
berenCor <- cor.test(beren3$value[Feeds], beren3$age[Feeds])#
head(berenCor)#
berenANOVA <- aov(beren3$value[Feeds] ~ beren3$caregiver[Feeds])#
head(berenANOVA)#
boxplot( beren3$value[Feeds] ~ beren3$caregiver[Feeds], xlab= "who gave the bottle" , ylab = "amount of milk consumed (oz)" )#
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')#
pdf("r02-totalMilkByDay.pdf", height = 4, width = 4)#
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab=" ounces of milk")#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')#
dev.off() #
source("http://jonsmitchell.com/code/plotFxn02b.R")#
unique(beren3$event)#
beren4 <- beren3[Naps,]#
startHour <-(beren4$start_hour)#
startMin <- (beren4$start_minute)#
stopHour <- (beren4$start_minute)#
stopHour <-(beren4$end_hour)#
stopMin <- (beren4$end_minute)#
startHour#
startMin#
stopHour#
beren4$sleepTime <-((stopHour - startHour)* 60) +(stopMin-startMin)#
beren4#
totalNap <- tapply(beren4$sleepTime, beren4$age, sum)#
totalNap
setwd('~/Desktop/Evolution/tasks/Task_02')#
Data <- read.csv ('http://jonsmitchell.com/data/beren.csv', stringsAsFactors=F)#
write.csv(Data, 'rawdata.csv', quote=F)#
length(Data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(data)#
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:3, 4]#
Data[1:5, 1:3]#
Feeds <- which(Data[,9] == 'bottle')#
berenMilk <- Data[Feeds ,]#
head(berenMilk)#
Feeds <- which(Data[,'event'] == 'bottle')#
head(Feeds)#
Feeds <- which(Data$event == 'bottle')#
head(Feeds)#
dayID <- apply(Data, 1, function(x) paste(x[1:3],collapse='-'))#
head(dayID)#
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")#
head(dateID)#
Data$age <- dateID - dateID [which(Data$event == 'birth')]#
head(data)#
beren2<-Data#
beren3<- beren2[order(beren2$age) ,]#
write.csv(beren3, 'beren_new.csv', quote=F, row.names=FALSE)#
Feeds <- which(beren3$event == "bottle")#
avgMilk <- mean(beren3$value[Feeds])#
avgFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], mean)#
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)#
totalFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], sum)#
numFeeds <- tapply(beren3$value[Feeds] ,  beren3$age[Feeds], length)#
head(numFeeds)#
cor(beren3$value[Feeds], beren3$age[Feeds])#
cor.test(beren3$value[Feeds], beren3$age[Feeds])#
berenCor <- cor.test(beren3$value[Feeds], beren3$age[Feeds])#
head(berenCor)#
berenANOVA <- aov(beren3$value[Feeds] ~ beren3$caregiver[Feeds])#
head(berenANOVA)#
boxplot( beren3$value[Feeds] ~ beren3$caregiver[Feeds], xlab= "who gave the bottle" , ylab = "amount of milk consumed (oz)" )#
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')#
pdf("r02-totalMilkByDay.pdf", height = 4, width = 4)#
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab=" ounces of milk")#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')#
dev.off()
source("http://jonsmitchell.com/code/plotFxn02b.R")#
unique(beren3$event)
beren4 <- beren3[Amoxicilin,]
beren4 <- beren3[amoxicilin,]
setwd('~/Desktop/Evolution/tasks/Task_02')#
Data <- read.csv ('http://jonsmitchell.com/data/beren.csv', stringsAsFactors=F)#
write.csv(Data, 'rawdata.csv', quote=F)#
length(Data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(data)#
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:3, 4]#
Data[1:5, 1:3]#
Feeds <- which(Data[,9] == 'bottle')#
berenMilk <- Data[Feeds ,]#
head(berenMilk)#
Feeds <- which(Data[,'event'] == 'bottle')#
head(Feeds)#
Feeds <- which(Data$event == 'bottle')#
head(Feeds)#
dayID <- apply(Data, 1, function(x) paste(x[1:3],collapse='-'))#
head(dayID)#
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")#
head(dateID)#
Data$age <- dateID - dateID [which(Data$event == 'birth')]#
head(data)#
beren2<-Data#
beren3<- beren2[order(beren2$age) ,]#
write.csv(beren3, 'beren_new.csv', quote=F, row.names=FALSE)#
Feeds <- which(beren3$event == "bottle")
head(numFeeds)
avgMilk <- mean(beren3$value[Feeds])#
avgFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], mean)#
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)#
totalFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], sum)#
numFeeds <- tapply(beren3$value[Feeds] ,  beren3$age[Feeds], length)#
head(numFeeds)
cor(beren3$value[Feeds], beren3$amoxicilin [Feeds])
Data("amoxicilin")
numMedicine <- tapply(beren3$value[amoxicilin])
setwd('~/Desktop/Evolution/tasks/Task_02')#
Data <- read.csv ('http://jonsmitchell.com/data/beren.csv', stringsAsFactors=F)#
write.csv(Data, 'rawdata.csv', quote=F)
Feeds <- which(Data[,'event'] == 'bottle')
head(Feeds)
dayID <- apply(Data, 1, function(x) paste(x[1:3],collapse='-'))
head(dayID)
Data$medicine <- dateID - dateID [which(Data$event == 'amoxicilin')]
setwd('~/Desktop/Evolution/tasks/Task_02')#
Data <- read.csv ('http://jonsmitchell.com/data/beren.csv', stringsAsFactors=F)#
write.csv(Data, 'rawdata.csv', quote=F)
Medicine <- which(Data[,9] == 'amoxicilin')
berenMedicine <- Data[Medicine ,]
head(berenMedicine)
Medicine <- which(Data[,'event'] == 'amoxicilin')
head(Medicine)
dayID <- apply(Data, 1, function(x) paste(x[1:3],collapse='-'))
head(dayID)
dayID <- apply(Data, 1, function(x) paste(x[1:3],collapse='amoxicilin'))
head(dayID)
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-10-18")
head(dateID)
Data$medicine <- dateID - dateID [which(Data$event == 'amoxicilin')]
Data$Medicine <- dateID - dateID [which(Data$event == 'amoxicilin')]
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-4-18")
head(dateID)
beren2<-Data
beren3<- beren2[order(beren2$Medicine) ,]
write.csv(beren3, 'beren_new.csv', quote=F, row.names=FALSE)
avgMilk <- mean(beren3$value[Feeds])
Medicine <- which(beren3$event == "amoxicilin")
avgMedicine <- mean(beren3$value[Medicine])
avgMedicine <- tapply(beren3$value[Medicine], beren3$Nap[Medicine], mean)
avgMedicine <- tapply(beren3$value[Medicine], mean)
setwd('~/Desktop/Evolution/tasks/Task_02')#
Data <- read.csv ('http://jonsmitchell.com/data/beren.csv', stringsAsFactors=F)#
write.csv(Data, 'rawdata.csv', quote=F)#
length(Data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(data)#
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:3, 4]#
Data[1:5, 1:3]#
Feeds <- which(Data[,9] == 'bottle')#
berenMilk <- Data[Feeds ,]#
head(berenMilk)#
Feeds <- which(Data[,'event'] == 'bottle')#
head(Feeds)#
Feeds <- which(Data$event == 'bottle')#
head(Feeds)#
dayID <- apply(Data, 1, function(x) paste(x[1:3],collapse='-'))#
head(dayID)#
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")#
head(dateID)#
Data$age <- dateID - dateID [which(Data$event == 'birth')]#
head(data)#
beren2<-Data#
beren3<- beren2[order(beren2$age) ,]#
write.csv(beren3, 'beren_new.csv', quote=F, row.names=FALSE)#
Feeds <- which(beren3$event == "bottle")#
avgMilk <- mean(beren3$value[Feeds])
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)
totalFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], sum)
setwd('~/Desktop/Evolution/tasks/Task_02')#
Data <- read.csv ('http://jonsmitchell.com/data/beren.csv', stringsAsFactors=F)#
write.csv(Data, 'rawdata.csv', quote=F)#
length(Data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(data)#
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:3, 4]#
Data[1:5, 1:3]#
Feeds <- which(Data[,9] == 'bottle')#
berenMilk <- Data[Feeds ,]#
head(berenMilk)#
Feeds <- which(Data[,'event'] == 'bottle')#
head(Feeds)#
Feeds <- which(Data$event == 'bottle')#
head(Feeds)#
dayID <- apply(Data, 1, function(x) paste(x[1:3],collapse='-'))#
head(dayID)#
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")#
head(dateID)
head(data)
Data$Med <- dateID - dateID [which(Data$event == 'amoxicilin')]
Feeds <- which(Data[,9] == 'bottle')#
berenMilk <- Data[Feeds ,]#
head(berenMilk)
dayID <- apply(Data, 1, function(x) paste(x[1:3],collapse='-'))
head(dayID)
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-09-26")
head(dateID)
Data$Med <- dateID - dateID [which(Data$event == 'amoxicilin')]
dateID [which(Data$event == 'amoxicilin')]
head(data)
beren2<-Data
write.csv(beren3, 'beren_new.csv', quote=F, row.names=FALSE)
beren3<- beren2[order(beren2$amoxicilin) ,]
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-09-26")
head(dateID)
dateID [which(Data$event == 'amoxicilin')]
head(dataID)
head(data)
dateID
beren2<-Data
beren3<- beren2[order (beren2$amoxicilin) ,]
beren3<- beren2(order (beren2$amoxicilin) ,
write.csv(beren3, 'beren_new.csv', quote=F, row.names=FALSE)
Feeds <- which(beren3$event == "bottle")
cor(beren3$value[Feeds], beren3$amoxicilin[Feeds])
setwd('~/Desktop/Evolution/tasks/Task_02')#
Data <- read.csv ('http://jonsmitchell.com/data/beren.csv', stringsAsFactors=F)#
write.csv(Data, 'rawdata.csv', quote=F)#
length(Data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(data)#
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:3, 4]#
Data[1:5, 1:3]#
Feeds <- which(Data[,9] == 'bottle')#
berenMilk <- Data[Feeds ,]#
head(berenMilk)#
Feeds <- which(Data[,'event'] == 'bottle')#
head(Feeds)#
Feeds <- which(Data$event == 'bottle')#
head(Feeds)#
dayID <- apply(Data, 1, function(x) paste(x[1:3],collapse='-'))#
head(dayID)#
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")#
head(dateID)#
Data$age <- dateID - dateID [which(Data$event == 'birth')]#
head(data)#
beren2<-Data#
beren3<- beren2[order(beren2$age) ,]#
write.csv(beren3, 'beren_new.csv', quote=F, row.names=FALSE)#
Feeds <- which(beren3$event == "bottle")#
avgMilk <- mean(beren3$value[Feeds])#
avgFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], mean)#
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)#
totalFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], sum)#
numFeeds <- tapply(beren3$value[Feeds] ,  beren3$age[Feeds], length)#
head(numFeeds)#
cor(beren3$value[Feeds], beren3$age[Feeds])#
cor.test(beren3$value[Feeds], beren3$age[Feeds])#
berenCor <- cor.test(beren3$value[Feeds], beren3$age[Feeds])#
head(berenCor)#
berenANOVA <- aov(beren3$value[Feeds] ~ beren3$caregiver[Feeds])#
head(berenANOVA)#
boxplot( beren3$value[Feeds] ~ beren3$caregiver[Feeds], xlab= "who gave the bottle" , ylab = "amount of milk consumed (oz)" )#
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')#
pdf("r02-totalMilkByDay.pdf", height = 4, width = 4)#
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab=" ounces of milk")#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')#
dev.off() #
source("http://jonsmitchell.com/code/plotFxn02b.R")#
unique(beren3$event)#
beren4 <- beren3[Naps,]#
startHour <-(beren4$start_hour)#
startMin <- (beren4$start_minute)#
stopHour <- (beren4$start_minute)#
stopHour <-(beren4$end_hour)#
stopMin <- (beren4$end_minute)#
startHour#
startMin#
stopHour#
beren4$sleepTime <-((stopHour - startHour)* 60) +(stopMin-startMin)#
beren4#
totalNap <- tapply(beren4$sleepTime, beren4$age, sum)#
totalNap#
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2,0.5,0), tck=-0.01)#
plot(as.numeric(names(totalNap)), totalNap, type= "b",pch=16, xlab="age in days", ylab='Nap time in minutes')#
cor.test(beren4$start_hour,beren4$sleepTime)
setwd('~/Desktop/Evolution/tasks/Task_02')
etwd('~/Desktop/Evolution/Tasks/Task_02')#
# read.csv() reads a file from your computer and stores the information in whatever object you tell it to#
Data <- read.csv ('http://jonsmitchell.com/data/beren.csv', stringsAsFactors=F)#
write.csv(Data, 'rawdata.csv', quote=F)#
#
length(Data)#
nrow(Data)#
ncol(Data)#
colnames(Data)#
head(data)#
Data[1,]#
Data[2,]#
Data[1:3,]#
Data[1:3, 4]#
Data[1:5, 1:3]#
#
Feeds <- which(Data[,9] == 'bottle')#
berenMilk <- Data[Feeds ,]#
#
head(berenMilk)#
Feeds <- which(Data[,'event'] == 'bottle')#
head(Feeds)#
Feeds <- which(Data$event == 'bottle')#
head(Feeds)#
dayID <- apply(Data, 1, function(x) paste(x[1:3],collapse='-'))#
head(dayID)#
dateID <- sapply(dayID, as.Date, format = "%Y-%m-%d", origin = "2019-04-18")#
head(dateID)#
Data$age <- dateID - dateID [which(Data$event == 'birth')]#
head(data)#
beren2<-Data#
beren3<- beren2[order(beren2$age) ,]#
write.csv(beren3, 'beren_new.csv', quote=F, row.names=FALSE)#
Feeds <- which(beren3$event == "bottle")#
avgMilk <- mean(beren3$value[Feeds])#
avgFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], mean)#
varFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], var)#
totalFeed <- tapply(beren3$value[Feeds], beren3$age[Feeds], sum)#
numFeeds <- tapply(beren3$value[Feeds] ,  beren3$age[Feeds], length)#
head(numFeeds)#
cor(beren3$value[Feeds], beren3$age[Feeds])#
cor.test(beren3$value[Feeds], beren3$age[Feeds])#
berenCor <- cor.test(beren3$value[Feeds], beren3$age[Feeds])#
head(berenCor)#
berenANOVA <- aov(beren3$value[Feeds] ~ beren3$caregiver[Feeds])#
head(berenANOVA)#
boxplot( beren3$value[Feeds] ~ beren3$caregiver[Feeds], xlab= "who gave the bottle" , ylab = "amount of milk consumed (oz)" )#
par(las=1, mar=c(5,5,1,1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')#
pdf("r02-totalMilkByDay.pdf", height = 4, width = 4)#
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2, 0.5, 0), tck=-0.01)#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab=" ounces of milk")#
plot(as.numeric(names(totalFeed)), totalFeed, type="b", pch=16, xlab="age in days", ylab="ounces of milk")#
abline(h=mean(totalFeed), lty=2, col='red')#
dev.off() #
source("http://jonsmitchell.com/code/plotFxn02b.R")#
unique(beren3$event)#
beren4 <- beren3[Naps,]#
startHour <-(beren4$start_hour)#
startMin <- (beren4$start_minute)#
stopHour <- (beren4$start_minute)#
stopHour <-(beren4$end_hour)#
stopMin <- (beren4$end_minute)#
startHour#
startMin#
stopHour#
beren4$sleepTime <-((stopHour - startHour)* 60) +(stopMin-startMin)#
beren4#
totalNap <- tapply(beren4$sleepTime, beren4$age, sum)#
totalNap#
par(las=1, mar=c(5, 5, 1, 1), mgp=c(2,0.5,0), tck=-0.01)#
plot(as.numeric(names(totalNap)), totalNap, type= "b",pch=16, xlab="age in days", ylab='Nap time in minutes')#
cor.test(beren4$start_hour,beren4$sleepTime)#
# These show a negative correlation. #
# hypothesis: The amount of time that Beren naps decreased as solid food consumption increased #
# Questions1: The first two hypotheses would be inappropriate because there is not enough data to support them. #
# Question 2: This graph is difficult to read because of the small x-axis scale which makes the data scrunched together which makes it hard to determine the exact values for each point.#
#
Amox <- which(beren3$event == "amoxicilin")#
amoxData <- beren3[Amox,]#
head(amoxData)
Amox <- which(beren3$event == "amoxicilin")
amoxData <- beren3[Amox,]#
head(amoxData)
unique('amoxicilin')
unique(amoxData)
head(amoxData)
unique(amoxData)
DoseDays <- unique(amoxData)
head(DoseDays)
as.character(DoseDays)
as.character('162')
as.character(162)
Amox <- which(beren3$event == "amoxicilin")#
amoxData <- beren3[Amox,]#
head(amoxData)#
#
# Object 1 = totalFeed on days with amoxilinc#
	# find the unique days on amoxicilin-- unique(), save as DoseDays#
#
	# use DoseDays (unique days for amox) and find feeds on only those days#
	### trick here is that the NAMES of totalFeed are the days, so we havezto ask it by name, not number. Use as.character(). Call this doseFeedsNA#
#
	# remove NAs from your data using na.omit(). #
doseFeeds <- na.omit(as.data.frame(doseFeedsNA))[,1] # Replace x with whatever you call the totalFeed on dose days#
# Object 2 = totalFeed on days WITHOUT amox#
NoAmox <- setdiff(names(totalFeed), as.character(DoseDays))
setwd('~/Desktop/Evolution/Tasks/Task_04')
read.csv("http://jonsmitchell.com/data/biol112labresults.csv", stringsAsFactors=F)
counts <- results [,c ("yellow", "red", "green", "blue", "black", "tan")]
results <-read.csv("http://jonsmitchell.com/data/biol112labresults.csv", stringsAsFactors=F)
counts <- results [,c ("yellow", "red", "green", "blue", "black", "tan")]
backgrounds <- c("White", "Red", "Yellow", "Green", "Blue", "Black")
backgroundCol <- c("white", "#d53e4f", "#fee08b", "#abdda4", "#3288bd", "black")
calcChi (counts[1,])
calcChi(counts[1,])
setwd('/Desktop/Evolution/Tasks/Task_04')
results<- read.csv("http://jonsmitchell.com/databiol112labresults.csv", stringsAsFactors=F)
results <-read.csv("http://jonsmitchell.com/data/biol112labresults.csv", stringsAsFactors=F)
counts<- results[,c("yellow","red","green","blue","black","tan")]#
backgrounds <- c("White" ,"Red" ,"Yellow" ,"Green" ,"Blue" ,"Black")#
backgroundCol <- c ("white", "#d53e4f", "#fee08b", "#abdda4", "#3288bd", "black")#
calcChi(counts[1,])#
Chisqs <- apply(counts, 1, calcChi)#
plotChis(counts)
results <- read.csv("http://jonsmitchell.com/data/biol112labresults.csv", stringsAsFactors=F)
counts<- results[,c("yellow","red","green","blue","black","tan")]
backgrounds <- c("White" ,"Red" ,"Yellow" ,"Green" ,"Blue" ,"Black")
backgroundCol <- c ("white", "#d53e4f", "#fee08b", "#abdda4", "#3288bd", "black")
calcChi(counts[1,])
install.packages('calcChi')
libPaths('calcChi')
calcChi(counts[1,])
source("http://jonsmitchell.com/code/fxn05.R")
calcChi(counts[1,])
setwd('~/Desktop/Evolution/Tasks/Task_04')#
source("http://jonsmitchell.com/code/fxn05.R")#
Pop1<- simPop(Popsize = 50, nGenerations = 100, initial_p = 0.5, h =1, s = 0)#
plot (1:nrow (Pop1), Pop1 [,1], ylim=c (0,1), type = "l", xlab="generation", ylab="allele freq.", lwd=2)#
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')#
legend("topleft", legend = c("a", "b"), col = c("black", "red"), lwd = 2, bty="n")#
plotFit( nruns = 10, n = 50, ngens = 100, init_p=0.5, h = 1, s = 0 )#
Expectation <- c(10, 10, 10, 10)#
Observed <- c(15, 15, 5, 5)#
Chisq <- sum(((Expectation-Observed)^2)/Expectation)#
barplot(rbind(Expectation, Observed), beside=T, main=bquote(chi^2 ~ "=" ~.(Chisq)), legend.text=c("expected", "observed"))#
# the x^2 was 10#
Observed <- c(5, 0, 0, 35)#
Chisq <- sum(((Expectation-Observed)^2)/Expectation)#
barplot(rbind(Expectation, Observed), beside=T, main=bquote(chi^2 ~ "=" ~.(Chisq)), legend.text=c("expected", "observed"))#
# the x^2 was 85#
Observed <- c(2, 3, 10, 30)#
Chisq <- sum(((Expectation-Observed)^2)/Expectation)#
barplot(rbind(Expectation, Observed), beside=T, main=bquote(chi^2 ~ "=" ~.(Chisq)), legend.text=c("expected", "observed"))#
# x^2 was 51.3#
#
results <- read.csv("http://jonsmitchell.com/data/biol112labresults.csv", stringsAsFactors=F)#
counts<- results[,c("yellow","red","green","blue","black","tan")]#
backgrounds <- c("White" ,"Red" ,"Yellow" ,"Green" ,"Blue" ,"Black")#
backgroundCol <- c ("white", "#d53e4f", "#fee08b", "#abdda4", "#3288bd", "black")#
calcChi(counts[1,])
Chisqs <- apply(counts, 1, calcChi)
plotChis(counts)
Avg <- mean(Chisqs)
backgroundAvgs <- tapply(Chisqs, results[,3], mean)
propSig <- length( which( Chisqs > 11.70))/length(Chisqs)#
percSig <- round(100 * propSig)
par(las = 1, mar = c(4, 4, 1, 1), mgp = c(2, 0.5, 0), tck = -0.01, cex.axis=1)#
hist(Chisqs, main="", xlab="chi-squared values", ylab="frequency")
setwd('~/Desktop/Evolution/Tasks/Task_04')#
source("http://jonsmitchell.com/code/fxn05.R")#
Pop1<- simPop(Popsize = 50, nGenerations = 100, initial_p = 0.5, h =1, s = 0)#
plot (1:nrow (Pop1), Pop1 [,1], ylim=c (0,1), type = "l", xlab="generation", ylab="allele freq.", lwd=2)#
lines(1:nrow(Pop1), Pop1[,2], lwd=2, col='red')#
legend("topleft", legend = c("a", "b"), col = c("black", "red"), lwd = 2, bty="n")#
plotFit( nruns = 10, n = 50, ngens = 100, init_p=0.5, h = 1, s = 0 )#
Expectation <- c(10, 10, 10, 10)#
Observed <- c(15, 15, 5, 5)#
Chisq <- sum(((Expectation-Observed)^2)/Expectation)#
barplot(rbind(Expectation, Observed), beside=T, main=bquote(chi^2 ~ "=" ~.(Chisq)), legend.text=c("expected", "observed"))#
# the x^2 was 10#
Observed <- c(5, 0, 0, 35)#
Chisq <- sum(((Expectation-Observed)^2)/Expectation)#
barplot(rbind(Expectation, Observed), beside=T, main=bquote(chi^2 ~ "=" ~.(Chisq)), legend.text=c("expected", "observed"))#
# the x^2 was 85#
Observed <- c(2, 3, 10, 30)#
Chisq <- sum(((Expectation-Observed)^2)/Expectation)#
barplot(rbind(Expectation, Observed), beside=T, main=bquote(chi^2 ~ "=" ~.(Chisq)), legend.text=c("expected", "observed"))#
# x^2 was 51.3#
#
results <- read.csv("http://jonsmitchell.com/data/biol112labresults.csv", stringsAsFactors=F)#
counts<- results[,c("yellow","red","green","blue","black","tan")]#
backgrounds <- c("White" ,"Red" ,"Yellow" ,"Green" ,"Blue" ,"Black")#
backgroundCol <- c ("white", "#d53e4f", "#fee08b", "#abdda4", "#3288bd", "black")
calcChi(counts[1,])
Chisqs <- apply(counts, 1, calcChi)
plotChis(counts)
Avg <- mean(Chisqs)
backgroundAvgs <- tapply(Chisqs, results[,3], mean)
propSig <- length( which( Chisqs > 11.70))/length(Chisqs)
percSig <- round(100 * propSig)
par(las = 1, mar = c(4, 4, 1, 1), mgp = c(2, 0.5, 0), tck = -0.01, cex.axis=1)
hist(Chisqs, main="", xlab="chi-squared values", ylab="frequency")
par(las=1, mar=c(4, 4, 1, 1), mgp=c(2, 0.5, 0), tck = -0.01, cex.axis=1)
plot(1, 1, xlim=c(0, 400), ylim=c(1, 8.5), xlab="", ylab="", type="n", yaxt="n")
axis(2, at = 1:length(backgrounds), labels = backgrounds)
mtext(side=1, expression(chi^2), cex=1.75, line=2.5)
counter <- 1
for (i in backgrounds){
for (i in backgrounds){Data <- Chisqs[which(results[,3] == i)]#
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])#
counter <- counter +1#
}
for (i in backgrounds){Data <- Chisqs[which(results[,3] == i)]#
addHist(Y=counter, Dat=Data, Color=backgroundCol[counter])#
counter <- counter +1}
abline(v = 11.70, lty=2, lwd=2, col='black')
Simulation <- simDraws(10000)
addHist(Y=7, Dat=Simulation, Color="lightgray")
mtext(side=2, at=7, line=0, "simulated")
abline(v=11.70, lty=2, lwd=2)
Fit<- c(1, 1, 1, 1, 1, 1)
names(Fit)<- 1:6
Simulation3 <- simDraws(1e4, w=Fit)
addHist(Y=8, Dat=Simulation3, Color=rgb(0,0,0,0.25))
Fit <- c(0.5, 0.6, 0.7, 1, 1, 1)
names(Fit)<- 1:6#
Simulation4 <- simDraws(1e4, w=Fit)#
addHist(Y=8, Dat=Simulation4, Color=rgb(0,0,0,0.25))#
Fit <- c(0.1, 0.2, 0.3, 0.4, 0.5, 1)#
names(Fit) <- 1:6#
Simulation5 <- simDraws(1e4, w=Fit)#
addHist(Y=8, Dat=Simulation5, Color=rgb(0,0,0,0.25))#
Fit<- c(0.1, 0.1, 0.1, 0.1, 0.1, 1)#
names(Fit)<- 1:6#
Simulation6<- simDraws(1e4, w=Fit)#
addHist(Y=8, Dat=Simulation6, Color=rgb(0,0,0,0.25))#
mtext(side=2, at=8, line=0, "sel.sim")
Simulation7 <- c(Simulation2, Simulation3, Simulation4, Simulation5, Simulation6)#
addHist(Y=8, Dat=Simulation7, Color=rgb(0,0,1,0.25))
