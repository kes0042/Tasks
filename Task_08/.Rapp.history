Labs <- sapply (AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex= 0.25)
plotTree(AnolisTree,offset=1, show.tip.label=FALSE)
anolis <- collapseTree(AnolisTree)
setwd("~/Desktop/Evolution/Tasks/Task_07")
install.packages("phytools")
library("phytools")
install.packages("ape")
text.string <- "(((((((cow, pig), whale), (bat, (lemur, human))),(robin, iguana)), coelacenth), (gold_fish, trout)), shark) ;"
vert.tree <-read.tree (text=text.string)
plot(vert.tree, edge.width=2)
nodelabels (frame="circle", bg='white', cex=1)
vert.tree
str( vert.tree)
tree <- read.tree(text= "(((A,B), (C,D)), E) ;")
tree <- compute.brlen(tree)
plotTree (tree, offset=1)
tiplabels (frame="circle", bg='lightblue', cex=1)
nodelabels (frame="circle", bg='white', cex=1)
tree$tip.label
tree$edge
AnolisTree <- force.ultrametric (read.tree("https://jonsmitchell.com/data/anolis.tre"))
par(las=1)
hist(AnolisTree$edge.length, col= 'black', border='white', main="", xlab=" edge lengths for the Anolis tree", ylim=c(0, 50), xlim=c(0,6))
tipEdges <-which(AnolisTree$edge[, 2] <= Ntip (AnolisTree))
Lengths <-AnolisTree$edge.length
names(Lengths) <- AnolisTree$tip.label
names(Lengths) [which(Lengths == min(Lengths))]
plot(AnolisTree, cex=0.25)
Labs <- sapply (AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex= 0.25)
EdgesThatAreTips <- which(Anolistree$edge[,2] <= Ntip(AnolisTree))
EdgesThatAreTips <- which(Anolistree$edge[,2] <= Ntip(Tree))
EdgesThatAreTips <- which(AnolisTree$edge[,2] <= Ntip(AnolisTree))
TipLengths <- AnolisTree$edge.length[EdgesThatAreTips]
AnolisTree$edge.length
ShortestTips <- which(TipLengths == min(TipLengths))
tree_no_short <- drop.tip(tree, ShortestTips[1])
plot(tree_no_short)
EdgesThatAreTips <- which(AnolisTree$edge[,2] <= Ntip(AnolisTree))
TipLengths <- AnolisTree$edge.length[EdgesThatAreTips]
AnolisTree$edge.length
AnolisShortestTips <- which(TipLengths == min(TipLengths))
Anolistree_no_short <- drop.tip(tree, ShortestTips[1])
Anolistree_no_short <- drop.tip(tree, AnolisShortestTips[1])
plot(Anolistree_no_short)
setwd("~/Desktop/Evolution/Tasks/Task_07")
install.packages("phytools")
library("phytools")
install.packages("ape")
text.string <- "(((((((cow, pig), whale), (bat, (lemur, human))),(robin, iguana)), coelacenth), (gold_fish, trout)), shark) ;"
vert.tree <-read.tree (text=text.string)
plot(vert.tree, edge.width=2)
nodelabels (frame="circle", bg='white', cex=1)
plot(vert.tree, edge.width=2)
nodelabels (frame="circle", bg='white', cex=1)
vert.tree
str( vert.tree)
tree <- read.tree(text= "(((A,B), (C,D)), E) ;")
tree <- compute.brlen(tree)
plotTree (tree, offset=1)
tiplabels (frame="circle", bg='lightblue', cex=1)
nodelabels (frame="circle", bg='white', cex=1)
tree$tip.label
tree$edge
AnolisTree <- force.ultrametric (read.tree("https://jonsmitchell.com/data/anolis.tre"))
par(las=1)
hist(AnolisTree$edge.length, col= 'black', border='white', main="", xlab=" edge lengths for the Anolis tree", ylim=c(0, 50), xlim=c(0,6))
tipEdges <-which(AnolisTree$edge[, 2] <= Ntip (AnolisTree))
Lengths <-AnolisTree$edge.length
names(Lengths) <- AnolisTree$tip.label
names(Lengths) [which(Lengths == min(Lengths))]
plot(AnolisTree, cex=0.25)
Labs <- sapply (AnolisTree$edge.length, round, digits=2)
edgelabels(text=Labs, cex= 0.25)
EdgesThatAreTips <- which(AnolisTree$edge[,2] <= Ntip(AnolisTree))
TipLengths <- AnolisTree$edge.length[EdgesThatAreTips]
AnolisTree$edge.length
AnolisShortestTips <- which(TipLengths == min(TipLengths))
Anolistree_no_short <- drop.tip(tree, AnolisShortestTips[1])
plot(Anolistree_no_short)
AnolisTree <- force.ultrametric (read.tree("https://jonsmitchell.com/data/anolis.tre"))
par(las=1)
hist(AnolisTree$edge.length, col= 'black', border='white', main="", xlab=" edge lengths for the Anolis tree", ylim=c(0, 50), xlim=c(0,6))
tipEdges <-which(AnolisTree$edge[, 2] <= Ntip (AnolisTree))
Lengths <-AnolisTree$edge.length
names(Lengths) <- AnolisTree$tip.label
names(Lengths) [which(Lengths == min(Lengths))]
plot(AnolisTree, cex=0.25)
Labs <- sapply (AnolisTree$edge.length, round, digits=2)
tiplabels (frame="circle", bg='lightblue', cex=1)
nodelabels (frame="circle", bg='white', cex=1)
tree$tip.label
tree$edge
Anolistree$edge
AnolisTree$edge
EdgesThatAreTips <- which(AnolisTree$edge[,2] <= Ntip(AnolisTree))
TipLengths <- AnolisTree$edge.length[EdgesThatAreTips]
AnolisTree$edge.length
AnolisShortestTips <- which(TipLengths == min(TipLengths))
Anolistree_no_short <- drop.tip(tree, AnolisShortestTips[1])
Anolistree_no_short <- drop.tip(tree, AnolisShortestTips[])
Anolistree_no_short <- drop.tip(tree, AnolisShortestTips[1])
plot(Anolistree_no_short)
setwd("~/Desktop/Evolution/Tasks/Task_08")
install.packages("phytools")
library("phytools")
install.packages("ape")
text.string <- "(((((((cow, pig), whale), (bat, (lemur, human))),(robin, iguana)), coelacenth), (gold_fish, trout)), shark) ;"
AnolisTree <- force.ultrametric (read.tree("https://jonsmitchell.com/data/anolis.tre"))#
par(las=1)
hist(AnolisTree$edge.length, col= 'black', border='white', main="", xlab=" edge lengths for the Anolis tree", ylim=c(0, 50), xlim=c(0,6))
tipEdges <-which(AnolisTree$edge[, 2] <= Ntip (AnolisTree))
Lengths <-AnolisTree$edge.length
names(Lengths) <- AnolisTree$tip.label
plot(AnolisTree, cex=0.25)
setwd("~/Desktop/Evolution/Tasks/Task_08")
install.packages("phytools")
library("phytools")
install.packages("ape")
text.string <- "(((((((cow, pig), whale), (bat, (lemur, human))),(robin, iguana)), coelacenth), (gold_fish, trout)), shark) ;"
vert.tree <-read.tree (text=text.string)
plot(vert.tree, edge.width=2)
nodelabels (frame="circle", bg='white', cex=1)
tree <-read.tree (text=text.string)
plot(tree, type="fan")
data <- read.csv("https://jonsmitchell.com/data/svl.csv", stringsAsFactors=F, row.names=1)
data
svl <- setNames(data$svl, rownames(data))
plot(tree, type="fan")#
#
#question 1: 12#
#
data <- read.csv("https://jonsmitchell.com/data/svl.csv", stringsAsFactors=F, row.names=1d)#
data#
#
#question2:#
svl <- setNames(data$svl, rownames(data))
Acestors <- fastAnc(tree, svl, vars=TRUE, CI=TRUE)
setwd("~/Desktop/Evolution/Tasks/Task_08")
library("phytools")
tree <-read.tree("https://jonsmitchell.com/data/anolis.tre")
plot(tree, type="fan")
tree$tip.label
data <- read.csv("https://jonsmitchell.com/data/svl.csv", stringsAsFactors=F, row.names=1d)
data <- read.csv("https://jonsmitchell.com/data/svl.csv", stringsAsFactors=F, row.names=1)
data
date [,1]
svl <- setNames(data$svl, rownames(data))
svl
Acestors <- fastAnc(tree, svl, vars=TRUE, CI=TRUE)
par(mar=c(0.1,0.1,0.1,0.1))
plot(tree, type="fan", lwd=2, show.tip.label=F)
tiplabels(pch=16, cew=0.25*Ancestors$ace)
tiplabels(pch=16, cex=0.25*Ancestors$ace)
tiplabels(pch=16, cex=0.25*svl[tree$tip.label])
nodelabels(pch=16, cex=0.25*Ancestors$ace)
Acestors <- fastAnc(tree, svl, vars=TRUE, CI=TRUE)
nodelabels(pch=16, cex=0.25*Ancestors$ace)
setwd("~/Desktop/Evolution/Tasks/Task_08")
library("phytools")
tree <-read.tree("https://jonsmitchell.com/data/anolis.tre")
plot(tree, type="fan")
tree$tip.label
data <- read.csv("https://jonsmitchell.com/data/svl.csv", stringsAsFactors=F, row.names=1)
data
date [,1]
data
svl <- setNames(data$svl, rownames(data))
svl
par(mar=c(0.1,0.1,0.1,0.1))
plot(tree, type="fan", lwd=2, show.tip.label=F)
tiplabels(pch=16, cex=0.25*svl[tree$tip.label])
nodelabels(pch=16, cex=0.25*Ancestors$ace)
setwd("~/Desktop/Evolution/Tasks/Task_08")
library("phytools")
tree <-read.tree("https://jonsmitchell.com/data/anolis.tre")
plot(tree, type="fan")
data <- read.csv("https://jonsmitchell.com/data/svl.csv", stringsAsFactors=F, row.names=1)
data
Ancestors <- fastAnc(tree, svl, vars=TRUE, CI=TRUE)
svl <- setNames(data$svl, rownames(data))
svl
Ancestors <- fastAnc(tree, svl, vars=TRUE, CI=TRUE)
par(mar=c(0.1,0.1,0.1,0.1))
plot(tree, type="fan", lwd=2, show.tip.label=F)
tiplabels(pch=16, cex=0.25*svl[tree$tip.label])
nodelabels(pch=16, cex=0.25*Ancestors$ace)
obj <- contMap(tree, svl, plot=F)
plot (obj, type="fan", legend= 0.7*max(nodeHeights(tree)), sig=2, fsize=c(0.7, 0.9))
fossilData <- data.frame(svl=log(c(25.4, 23.2, 17.7, 19.7, 24, 31)), tip1=c("Anolis_aliniger", "Anolis_aliniger", "Anolis_occultus", "Anolis_ricordii", "Anolis_cristatellus", "Anolis_occultus"), tip2=c("Anolis_chlorocyanus", "Anolis_coelestinus", "Anolis_hendersoni", "Anolis_cybotes", "Anolis_angusticeps", "Anolis_angusticeps"))
fossilNodes <-c()
nodeN <-c()
Node <- fastMRCA(tree, fossilData [i, "tip1"], fossilData[i, "tip2"])
Node <- fastMRCA(tree, fossilData [i,"tip1"], fossilData[i,"tip2"])
setwd("~/Desktop/Evolution/Tasks/Task_08")#
library("phytools")#
tree <-read.tree("https://jonsmitchell.com/data/anolis.tre")#
plot(tree, type="fan")
data <- read.csv("https://jonsmitchell.com/data/svl.csv", stringsAsFactors=F, row.names=1)#
dim(data)#
class(data)
svl <- setNames(data$svl, rownames(data))
svl
Ancestors <- fastAnc(tree, svl, vars=TRUE, CI=TRUE)
par(mar=c(0.1,0.1,0.1,0.1))
plot(tree, type="fan", lwd=2, show.tip.label=F)
tiplabels(pch=16, cex=0.25*svl[tree$tip.label])
# adds the ancestral sates
nodelabels(pch=16, cex=0.25*Ancestors$ace)
obj <- contMap(tree, svl, plot=F)
plot (obj, type="fan", legend= 0.7*max(nodeHeights(tree)), sig=2, fsize=c(0.7, 0.9))
fossilData <- data.frame(svl=log(c(25.4, 23.2, 17.7, 19.7, 24, 31)), tip1=c("Anolis_aliniger", "Anolis_aliniger", "Anolis_occultus", "Anolis_ricordii", "Anolis_cristatellus", "Anolis_occultus"), tip2=c("Anolis_chlorocyanus", "Anolis_coelestinus", "Anolis_hendersoni", "Anolis_cybotes", "Anolis_angusticeps", "Anolis_angusticeps"))
fossilNodes <-c()
nodeN <-c()
plot(tree, cex=0.5)
for (i in 1:nrow(fossilData))	{
Node <- fastMRCA(tree, fossilData [i,"tip1"], fossilData[i,"tip2"])
fossilNodes[i] <- fossilData[i, "svl"]
nodeN[i] <- Node
nodelabels(node=Node, pch=21, bg="red", cex=1.2)
}
names(fossilNodes) <- nodeN
Ancestors_withFossils <- fastAnc(tree, svl, anc.states=fossilNodes, CI=TRUE, var=TRUE)
install.packages("geiger")
Ancestors <- fastAnc(tree, svl, vars=TRUE, CI=TRUE)
r-class(Ancestors)
ace
fit.BM <-fastAnc(tree, svl, vars=TRUE, CI=TRUE)
fit.BM
CI
CI(fastAnc(tree, svl, vars=TRUE, CI=TRUE))
fit.BM <-fastAnc(tree, svl, vars=TRUE, CI=FALSE)
fit.BM
fit.BM <-fastAnc(tree, svl, vars=TRUE, CI=TRUE)
fit.BM
print(fit.BM)
plot.tree(fit.BM)
pheogram95
type="pheogram95"
setwd("~/Desktop/Evolution/Tasks/Task_08")#
library("phytools")#
tree <-read.tree("https://jonsmitchell.com/data/anolis.tre")#
plot(tree, type="fan")#
#question 1: 82 tips#
#
data <- read.csv("https://jonsmitchell.com/data/svl.csv", stringsAsFactors=F, row.names=1)#
dim(data)#
class(data)#
#
#question2: there are 82 dimensions and 1 branch#
#
svl <- setNames(data$svl, rownames(data))#
svl#
#
Ancestors <- fastAnc(tree, svl, vars=TRUE, CI=TRUE)
type="pheogram95"
fastAnc("Ancestors")
fastAnc("phylo")
Ancestors <- fastAnc(tree, svl, vars=TRUE, CI=TRUE)
Ancestors
setwd("~/Desktop/Evolution/Tasks/Task_08")#
library("phytools")#
tree <-read.tree("https://jonsmitchell.com/data/anolis.tre")#
plot(tree, type="fan")#
#question 1: 82 tips#
#
data <- read.csv("https://jonsmitchell.com/data/svl.csv", stringsAsFactors=F, row.names=1)#
dim(data)#
class(data)#
#
#question2: there are 82 dimensions and 1 branch#
#
svl <- setNames(data$svl, rownames(data))#
svl#
#
Ancestors <- fastAnc(tree, svl, vars=TRUE, CI=TRUE)
par(mar=c(0.1,0.1,0.1,0.1))#
plot(tree, type="fan", lwd=2, show.tip.label=F)
# labels the tips with points instead of words using pch #
tiplabels(pch=16, cex=0.25*svl[tree$tip.label])#
# adds the ancestral sates #
nodelabels(pch=16, cex=0.25*Ancestors$ace)
nodelabels(pch=16, cex=0.25*Ancestors$ace)#
# visiualize the data in different way to see the differences in the tips #
obj <- contMap(tree, svl, plot=F)#
plot (obj, type="fan", legend= 0.7*max(nodeHeights(tree)), sig=2, fsize=c(0.7, 0.9))#
fossilData <- data.frame(svl=log(c(25.4, 23.2, 17.7, 19.7, 24, 31)), tip1=c("Anolis_aliniger", "Anolis_aliniger", "Anolis_occultus", "Anolis_ricordii", "Anolis_cristatellus", "Anolis_occultus"), tip2=c("Anolis_chlorocyanus", "Anolis_coelestinus", "Anolis_hendersoni", "Anolis_cybotes", "Anolis_angusticeps", "Anolis_angusticeps"))#
# question 5: #
fossilNodes <-c()
nodeN <-c()
plot(tree, cex=0.5)
for (i in 1:nrow(fossilData))	{#
	Node <- fastMRCA(tree, fossilData [i,"tip1"], fossilData[i,"tip2"])#
	fossilNodes[i] <- fossilData[i, "svl"]#
	nodeN[i] <- Node#
	nodelabels(node=Node, pch=21, bg="red", cex=1.2)#
}
names(fossilNodes) <- nodeN
Ancestors_withFossils <- fastAnc(tree, svl, anc.states=fossilNodes, CI=TRUE, var=TRUE)
setwd("~/Desktop/Evolution/Tasks/Task_08")#
library("phytools")#
tree <-read.tree("https://jonsmitchell.com/data/anolis.tre")#
plot(tree, type="fan")#
#question 1: 82 tips#
#
data <- read.csv("https://jonsmitchell.com/data/svl.csv", stringsAsFactors=F, row.names=1)#
dim(data)#
class(data)#
#
#question2: there are 82 dimensions and 1 branch#
#
svl <- setNames(data$svl, rownames(data))#
svl#
#
Ancestors <- fastAnc(tree, svl, vars=TRUE, CI=TRUE)#
#question 3: stored in the tips which is svl .     The CI95 elements are on the ancestral state.#
#
#quesiton 4: the function computes the contrast state at the root and re-roots the tree at interval nodes#
par(mar=c(0.1,0.1,0.1,0.1))#
plot(tree, type="fan", lwd=2, show.tip.label=F)#
#
# labels the tips with points instead of words using pch #
tiplabels(pch=16, cex=0.25*svl[tree$tip.label])#
# adds the ancestral sates #
nodelabels(pch=16, cex=0.25*Ancestors$ace)#
# visiualize the data in different way to see the differences in the tips #
obj <- contMap(tree, svl, plot=F)#
plot (obj, type="fan", legend= 0.7*max(nodeHeights(tree)), sig=2, fsize=c(0.7, 0.9))#
fossilData <- data.frame(svl=log(c(25.4, 23.2, 17.7, 19.7, 24, 31)), tip1=c("Anolis_aliniger", "Anolis_aliniger", "Anolis_occultus", "Anolis_ricordii", "Anolis_cristatellus", "Anolis_occultus"), tip2=c("Anolis_chlorocyanus", "Anolis_coelestinus", "Anolis_hendersoni", "Anolis_cybotes", "Anolis_angusticeps", "Anolis_angusticeps"))#
# question 5: #
fossilNodes <-c()#
nodeN <-c()#
#
plot(tree, cex=0.5)#
# question 5:#
for (i in 1:nrow(fossilData))	{#
	Node <- fastMRCA(tree, fossilData [i,"tip1"], fossilData[i,"tip2"])#
	fossilNodes[i] <- fossilData[i, "svl"]#
	nodeN[i] <- Node#
	nodelabels(node=Node, pch=21, bg="red", cex=1.2)#
}#
names(fossilNodes) <- nodeN#
Ancestors_withFossils <- fastAnc(tree, svl, anc.states=fossilNodes, CI=TRUE, var=TRUE)#
#
# question 7: fossils change the estimated ancestral sizes because you can look at the fossils and determine based off of how far the species is on the tree the relative size you can also look at the speices between two fossils and do the same thing. #
# question 8-10:#
install.packages("geiger")
setwd("~/Desktop/Evolution/Tasks/Task_08")#
library("phytools")#
tree <-read.tree("https://jonsmitchell.com/data/anolis.tre")#
plot(tree, type="fan")#
#question 1: 82 tips#
#
data <- read.csv("https://jonsmitchell.com/data/svl.csv", stringsAsFactors=F, row.names=1)#
dim(data)#
class(data)#
#
#question2: there are 82 dimensions and 1 branch#
#
svl <- setNames(data$svl, rownames(data))#
svl#
#
Ancestors <- fastAnc(tree, svl, vars=TRUE, CI=TRUE)#
#question 3: stored in the tips which is svl .     The CI95 elements are on the ancestral state.#
#
#quesiton 4: the function computes the contrast state at the root and re-roots the tree at interval nodes#
par(mar=c(0.1,0.1,0.1,0.1))#
plot(tree, type="fan", lwd=2, show.tip.label=F)#
#
# labels the tips with points instead of words using pch #
tiplabels(pch=16, cex=0.25*svl[tree$tip.label])#
# adds the ancestral sates #
nodelabels(pch=16, cex=0.25*Ancestors$ace)#
# visiualize the data in different way to see the differences in the tips #
obj <- contMap(tree, svl, plot=F)#
plot (obj, type="fan", legend= 0.7*max(nodeHeights(tree)), sig=2, fsize=c(0.7, 0.9))#
fossilData <- data.frame(svl=log(c(25.4, 23.2, 17.7, 19.7, 24, 31)), tip1=c("Anolis_aliniger", "Anolis_aliniger", "Anolis_occultus", "Anolis_ricordii", "Anolis_cristatellus", "Anolis_occultus"), tip2=c("Anolis_chlorocyanus", "Anolis_coelestinus", "Anolis_hendersoni", "Anolis_cybotes", "Anolis_angusticeps", "Anolis_angusticeps"))#
# question 5: #
fossilNodes <-c()#
nodeN <-c()#
#
plot(tree, cex=0.5)#
# question 5:#
for (i in 1:nrow(fossilData))	{#
	Node <- fastMRCA(tree, fossilData [i,"tip1"], fossilData[i,"tip2"])#
	fossilNodes[i] <- fossilData[i, "svl"]#
	nodeN[i] <- Node#
	nodelabels(node=Node, pch=21, bg="red", cex=1.2)#
}#
names(fossilNodes) <- nodeN#
Ancestors_withFossils <- fastAnc(tree, svl, anc.states=fossilNodes, CI=TRUE, var=TRUE)#
#
# question 7: fossils change the estimated ancestral sizes because you can look at the fossils and determine based off of how far the species is on the tree the relative size you can also look at the speices between two fossils and do the same thing. #
# question 8-10:#
install.packages("geiger")
library('gieger')
library("gieger")
library("geiger")
?fitContinuous
fitContinuous(tree, svl, model='EB')
fitContinuous(tree, svl, model='OU')
fitContinuous(tree, svl, model='BM')
