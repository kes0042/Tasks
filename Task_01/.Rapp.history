setwd(dir("old.dir"))
dir.exists(paths)
setwd("mytest2.R")
old.dir
setwd(old.dir)
library("swirl")
swirl()
1:20
pi:10
15:1
':'
"?"
?':'
seq(1, 20)
seq(0, 10, by=0.5)
seq(5, 10 , length=30)
my_seq<- seq(5, 10 , length=30)
length()
length(30)
length(my_seq)
1:length(my_seq)
seq(along.with = my_seq)
seq_along(my_seq)
rep(0, times = 40)
rep(c(0, 1, 2), times=10)
rep(c(0, 1, 2), each = 10)
library ("swirl")
swirl()
x <- c(44, NA, 5, NA)
x * 3
y <- rnorm(1000)
z<- rep(NA, 1000)
my_data <- sample(c(y,  z), 100)
my_na <-is.na(my_data)
skip()
my_data == NA
sum(my_na)
skip()
0\0
"0\0"
"0/0"
0/0
Inf-INf
Inf-Inf
library("swirl")
swirl()
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
print(y)
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
c(x(3, 5, 7))
c(x[1:7])
x[c(3, 5, 7)]
x(i.e. x [0])
x(i.e. x[0])
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf =NA)
vect
names(vect)
c(11, 2, NA)
vect2 <- c(11, 2, NA)
names(vect2) <- c(1"foo", "bar", "norf")
names(vect2) <- c("foo", "bar", "norf")
identical("vect", "vect2")
identical("vect2", "vect")
identical("vect2")
identical("vect2" vect)
identical("vect2" , "vect")
identical("vect" , "vect2")
identical("vect"), ("vect2")
identical("vect" "vect2")
identical("vect,vect2")
identical ("vect" , "vect2")
identical ("vect2" , "vect2")
identical ("vect" , "vect")
identical (vect , vect2)
vect["bar"]
vect[c("foo", "bar")]
library("swirl")
swirl()
my_vector <- c(1:20)
my_vector <- (1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4 ,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix()
?matrix
matrix(1-20)
dim(matrix(1-20)) <- c(4 ,5)
(matrix(1-20) <- c(4 ,5)
dim(4 ,5)
dim(my_matrix) <- c(4 ,5)
dim(my_matrix(1:20)) <- c(4 ,5)
dim(my_matrix) <- c(4 ,5)
my_matrix2 <- dim(my_matrix) <- 1:20 <- c(4 ,5)
my_matrix2 <- 1:20 <- c(4 ,5)
my_matrix2 <- 1:20
?matrix
my_matrix2 <- matrix((1:20 (nrow 4) (ncol 5))
my_matrix2 <- matrix (1:20, nrow= 4, ncol=5, byrow= FALSE, dimnames=NULL)
indentical(my_matrix2 , my_matrix)
indentical (my_matrix2, my_matrix)
indentical( my_matrix2 , my_matrix)
identical( my_matrix, my_matrix2)
cbind(patients, my_matrix)
patients <- "Bill", "Gina", "Kelly", and "Sean"
patients <- "Bill", "Gina", "Kelly", "Sean"
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, matrix)
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_matrix
my_data
class()
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
library("swirl")
swirl()
==
"=="
'=='
TRUE == TRUE
(FALSE == TRUE) == FALSE
6 == 7
6 < 7
6 <= 7
10 <= 10
5 != 7
5 !FALSE 7
5 ! 7
5 != 7
5 !== 7
! 5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6>4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints> 5
which(< 7)
which(ints>7)
any(ints< 0)
all(ints>0)
library("swirl")
swirl()
Sys.Date()
mean(c(2, 4, 5))
submit()
library("swirl")
swirl()
library("swirl")
swirl()
sys.date()
Sys.date()
Sys.Date()
mean(c(2, 4, 5))
submit()
boring_function('My first funcction!')
boring_function("My first funcction!")
boring_function("My first function!")
boring_function
submit()
library("swirl")
swirl()
Sys.Date()
mean(c(2, 4, 5))
submit()
boring_functions('My first function!')
boring_function('My first function!')
boring_function
submit()
my_mean <- function(my_vector) {sum(my_vector) / length(my_vector)}
submit()
my_mean(c(4, 5, 10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor =11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
evaluate(c(1.4, 3.6, 7.9, 8.8))
evaluate(sd,c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1},6)
evaluate(function(x){x1},c(8, 4, 0))
evaluate(function(x){x[1]},c(8, 4, 0))
evaluate(function(x){x[-1]},c(8, 4, 0))
?paste
paste("Programming", "is", "fun!")
telegram <- function(...){paste("START",..., "STOP", sep= "")  }
submit()
telegram(c("Hello", "how", "are", "you")
telegram(c("START", "Hello", "how", "are", "you", "STOP")
telegram ("START", "hello", "how", "are", "you", "STOP")
submit()
mad_libs(place= "Bahamas", adjective= "sunny", noun= "ocean")
submit()
"I" %p% "love" %p% "R!"
library("swirl")
swirl()
data(cars)
?cars
head(cars)
plot(cars)
?plots
??plots
help(plot)
plot(cars)
plot(x= cars$speed, y = car$dist)
plot(x= cars$speed, y = cars$dist)
plot(x= cars$dist, y = cars$speed)
plot(x= cars$speed, y = cars$dist)
plot(x= cars$speed, y = cars$dist, xlab= "Speed")
plot(x= cars$speed, y = cars$dist, ylab= "Stopping Distance")
plot(x= cars$speed, y = cars$dist, xlab= "Speed", ylab= "Stopping Distance")
plot(cars, main= "My Plot")
plot(cars, sub= "My Plot")
plot(cars, sub= "My Plot Subtitle")
plot(cars, col=2)
plot(cars, xlim = c(10, 15))
plot(cars, pch= 2)
data(mtcars)
?boxplot
boxplot(formula= mpg ~ cyl, data= mtcars)
hist(mtcars$mpg)
library("swirl")
swirl()
